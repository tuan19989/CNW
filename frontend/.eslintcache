[{"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\index.js":"1","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\App.js":"2","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\reportWebVitals.js":"3","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\home\\index.js":"4","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\home\\tableContent.js":"5","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\home\\index.js":"6","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\update\\index.js":"7","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\home\\tableContent.js":"8","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\home\\index.js":"9","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\home\\index.js":"10","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\update\\index.js":"11","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\update\\index.js":"12","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\home\\index.js":"13","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\home\\index.js":"14","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\update\\index.js":"15","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\home\\index.js":"16","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\update\\index.js":"17","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\home\\index.js":"18","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\update\\index.js":"19","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\update\\index.js":"20","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\update\\index.js":"21","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\home\\tableContent.js":"22","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\home\\tableContent.js":"23","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\home\\tableContent.js":"24","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\home\\tableContent.js":"25","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\home\\tableContent.js":"26","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\home\\tableContent.js":"27","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\components\\formInput.js":"28","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\services\\crud.js":"29","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\components\\formInput.js":"30","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\components\\formInput.js":"31","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\components\\formInput.js":"32","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\components\\formInput.js":"33","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\components\\formInput.js":"34","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\components\\formInput.js":"35","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\components\\formInput.js":"36","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\services\\http-common.js":"37"},{"size":565,"mtime":1611665546953,"results":"38","hashOfConfig":"39"},{"size":2402,"mtime":1612184696015,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1611665546957,"results":"41","hashOfConfig":"39"},{"size":1788,"mtime":1611740691709,"results":"42","hashOfConfig":"39"},{"size":1645,"mtime":1611740781675,"results":"43","hashOfConfig":"39"},{"size":1788,"mtime":1611749290907,"results":"44","hashOfConfig":"39"},{"size":668,"mtime":1611668322026,"results":"45","hashOfConfig":"39"},{"size":1897,"mtime":1611666264821,"results":"46","hashOfConfig":"39"},{"size":1813,"mtime":1611751620891,"results":"47","hashOfConfig":"39"},{"size":1783,"mtime":1611747012255,"results":"48","hashOfConfig":"39"},{"size":675,"mtime":1611751232973,"results":"49","hashOfConfig":"39"},{"size":663,"mtime":1611756608939,"results":"50","hashOfConfig":"39"},{"size":1755,"mtime":1611755721743,"results":"51","hashOfConfig":"39"},{"size":1783,"mtime":1611757795122,"results":"52","hashOfConfig":"39"},{"size":667,"mtime":1611759465076,"results":"53","hashOfConfig":"39"},{"size":1782,"mtime":1611759456867,"results":"54","hashOfConfig":"39"},{"size":669,"mtime":1612185245949,"results":"55","hashOfConfig":"39"},{"size":1794,"mtime":1612185077685,"results":"56","hashOfConfig":"39"},{"size":667,"mtime":1611757869124,"results":"57","hashOfConfig":"39"},{"size":669,"mtime":1611746303693,"results":"58","hashOfConfig":"39"},{"size":669,"mtime":1611740787450,"results":"59","hashOfConfig":"39"},{"size":1714,"mtime":1611751704243,"results":"60","hashOfConfig":"39"},{"size":1825,"mtime":1611747238736,"results":"61","hashOfConfig":"39"},{"size":1829,"mtime":1611757735682,"results":"62","hashOfConfig":"39"},{"size":1765,"mtime":1611756467430,"results":"63","hashOfConfig":"39"},{"size":1627,"mtime":1611759432089,"results":"64","hashOfConfig":"39"},{"size":1969,"mtime":1612185218284,"results":"65","hashOfConfig":"39"},{"size":3615,"mtime":1611666574270,"results":"66","hashOfConfig":"39"},{"size":4290,"mtime":1612184585417,"results":"67","hashOfConfig":"39"},{"size":2876,"mtime":1611740943619,"results":"68","hashOfConfig":"39"},{"size":3168,"mtime":1611751838508,"results":"69","hashOfConfig":"39"},{"size":3836,"mtime":1611747819780,"results":"70","hashOfConfig":"39"},{"size":3546,"mtime":1611755704145,"results":"71","hashOfConfig":"39"},{"size":3825,"mtime":1611759144586,"results":"72","hashOfConfig":"39"},{"size":2823,"mtime":1611759986547,"results":"73","hashOfConfig":"39"},{"size":3742,"mtime":1612184956052,"results":"74","hashOfConfig":"39"},{"size":177,"mtime":1611736190426,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1xd9dqt",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\index.js",[],["160","161"],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\App.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\reportWebVitals.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\home\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\pages\\update\\index.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\pages\\home\\tableContent.js",[],"D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\customers\\components\\formInput.js",["162"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    CustomerName: \"\",\r\n    ContactName: \"\",\r\n    Address: \"\",\r\n    City: \"Da Nang\",\r\n    PostalCode: \"45000\",\r\n    Country: \"VN\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        CustomerName: updateItem.CustomerName,\r\n        ContactName: updateItem.ContactName,\r\n        Address: updateItem.Address,\r\n        City: updateItem.City,\r\n        PostalCode: updateItem.PostalCode,\r\n        Country: updateItem.Country,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOne(updateID, postData)\r\n        : CRUD.create(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated Customer\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n    console.log(\"CustomerName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"customerName\">Customer Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"CustomerName\"\r\n          value={postData.CustomerName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Customer Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"contactName\">Contact Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ContactName\"\r\n          value={postData.ContactName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Contact Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"_address\">Address</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Address\"\r\n          value={postData.Address}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Address\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <input type=\"text\" name=\"City\" value=\"this is city\" hidden />\r\n      <input type=\"text\" name=\"PostalCode\" value=\"this is postalCode\" hidden />\r\n      <input type=\"text\" name=\"Country\" value=\"this is country\" hidden />\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\services\\crud.js",["163"],"import HttpRequest from \"./http-common\";\r\n\r\nconst getAll = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/user/all\");\r\n};\r\n\r\nconst create = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/user/insert\", data);\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/user/delete/${id}`);\r\n};\r\n\r\nconst updateOne = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/user/update/${id}`, data);\r\n};\r\n// categories\r\nconst getAllCate = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/category/all\");\r\n};\r\n\r\nconst createCate = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/category/insert\", data);\r\n};\r\n\r\nconst deleteOneCate = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/category/delete/${id}`);\r\n};\r\n\r\nconst updateOneCate = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/category/update/${id}`, data);\r\n};\r\n// employees\r\nconst getAllEm = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/employee/all\");\r\n};\r\n\r\nconst createEm = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/employee/insert\", data);\r\n};\r\n\r\nconst deleteOneEm = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/employee/${id}`);\r\n};\r\n\r\nconst updateOneEm = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/employee/${id}`, data);\r\n};\r\n//Orderdetail\r\nconst getAllOD = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/order_detail/all\");\r\n};\r\n\r\nconst createOD = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/order_detail/insert\", data);\r\n};\r\n\r\nconst deleteOneOD = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/order_detail/delete/${id}`);\r\n};\r\n\r\nconst updateOneOD = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/order_detail/update/${id}`, data);\r\n};\r\n//Oder\r\nconst getAllOder = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/order/all\");\r\n};\r\nconst createOder = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/order/insert\", data);\r\n};\r\n\r\nconst deleteOneOder = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/order/delete/${id}`);\r\n};\r\n\r\nconst updateOneOder = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/order/update/${id}`, data);\r\n};\r\n//products\r\nconst getAllPor = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/product/all\");\r\n};\r\n\r\nconst createPor = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/product/insert\", data);\r\n};\r\n\r\nconst deleteOnePor = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/product/delete/${id}`);\r\n};\r\n\r\nconst updateOnePor = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/product/update/${id}`, data);\r\n};\r\n//shipper\r\nconst getAllSp = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/shipper/all\");\r\n};\r\n\r\nconst createSp = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/shipper/insert\", data);\r\n};\r\n\r\nconst deleteOneSp = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/shipper/delete/${id}`);\r\n};\r\n\r\nconst updateOneSp = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080//shipper/update/${id}`, data);\r\n};\r\n//Suppliers\r\nconst getAllSup = async () => {\r\n  return await HttpRequest.get(\"http://192.168.1.12:8080/supplier/all\");\r\n};\r\n\r\nconst createSup = (data) => {\r\n  return HttpRequest.post(\"http://192.168.1.12:8080/supplier/insert\", data);\r\n};\r\n\r\nconst deleteOneSup = (id) => {\r\n  return HttpRequest.delete(`http://192.168.1.12:8080/supplier/delete/${id}`);\r\n};\r\n\r\nconst updateOneSup = (id, data) => {\r\n  return HttpRequest.put(`http://192.168.1.12:8080/supplier/update/${id}`, data);\r\n};\r\nexport default {\r\n   getAll, create, deleteOne, updateOne,\r\n   getAllCate, createCate, deleteOneCate, updateOneCate,\r\n   getAllEm, createEm, deleteOneEm, updateOneEm,\r\n   getAllOD, createOD, deleteOneOD, updateOneOD,\r\n   getAllOder, createOder, deleteOneOder, updateOneOder,\r\n   getAllPor, createPor, deleteOnePor, updateOnePor,\r\n   getAllSp, createSp, deleteOneSp, updateOneSp,\r\n   getAllSup, createSup, deleteOneSup, updateOneSup,\r\n   };\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\category\\components\\formInput.js",["164"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    CategoryName: \"\",\r\n    Description: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        CategoryName: updateItem.CategoryName,\r\n        Description: updateItem.Description,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOneCate(updateID, postData)\r\n        : CRUD.createCate(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"createCate\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"updateCate\") {\r\n          if (res.data.message === \"Updated category\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n    console.log(\"CategoryName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"CategoryName\">Category Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"CategoryName\"\r\n          value={postData.CategoryName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Category Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Description\">Description</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Description\"\r\n          value={postData.Description}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Description\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orderDetails\\components\\formInput.js",["165"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    OrderID: \"\",\r\n    ProductID: \"\",\r\n    Quantity: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        OrderID: updateItem.OrderID,\r\n        ProductID: updateItem.ProductID,\r\n        Quantity: updateItem.Quantity,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOneOD(updateID, postData)\r\n        : CRUD.createOD(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated OOrderdetails\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n   // console.log(\"CustomerName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"OrderID\">Order ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"OrderID\"\r\n          value={postData.OrderID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Order ID\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"ProductID\">Product ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ProductID\"\r\n          value={postData.ProductID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Product ID\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Quantity\">Quantity</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Quantity\"\r\n          value={postData.Quantity}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Quantity\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\employees\\components\\formInput.js",["166"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    LastName: \"\",\r\n    FirstName: \"\",\r\n    Birthdate: \"\",\r\n    Photo: \"\",\r\n    Notes: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        LastName: updateItem.LastName,\r\n        FirstName: updateItem.FirstName,\r\n        Birthdate: updateItem.Birthdate,\r\n        Photo: updateItem.Photo,\r\n        Notes: updateItem.Notes,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"updateEm\"\r\n        ? CRUD.updateOneEm(updateID, postData)\r\n        : CRUD.createEm(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"createEm\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"updateEm\") {\r\n          if (res.data.message === \"Updated employees\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n //   console.log(\"LastName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"LastName\">Last Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"LastName\"\r\n          value={postData.LastName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Last Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"FirstName\">First Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"FirstName\"\r\n          value={postData.FirstName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"First Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Birthdate\">Birthdate</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Birthdate\"\r\n          value={postData.Birthdate}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Birthdate\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Photo\">Photo</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Photo\"\r\n          value={postData.Photo}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Photo\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Notes\">Notes</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Notes\"\r\n          value={postData.Notes}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Notes\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\orders\\components\\formInput.js",["167"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    CustomerID: \"\",\r\n    EmployeeID: \"\",\r\n    OrderDate: \"\",\r\n    ShipperID: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        CustomerID: updateItem.CustomerID,\r\n        EmployeeID: updateItem.EmployeeID,\r\n        OrderDate: updateItem.OrderDate,\r\n        ShipperID: updateItem.ShipperID,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOneOder(updateID, postData)\r\n        : CRUD.createOder(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated Oders\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n  //  console.log(\"CustomerName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"CustomerID\">Customer ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"CustomerID\"\r\n          value={postData.CustomerID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Customer ID\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"EmployeeID\">Employee ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"EmployeeID\"\r\n          value={postData.EmployeeID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"EmployeeID\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"OrderDate\">OrderDate</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"OrderDate\"\r\n          value={postData.OrderDate}\r\n          onChange={handleChangeData}\r\n          placeholder=\"OrderDate\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"ShipperID\">Shipper ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ShipperID\"\r\n          value={postData.ShipperID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"ShipperID\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\products\\components\\formInput.js",["168"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    ProductName: \"\",\r\n    Unit: \"\",\r\n    Price: \"\",\r\n    SupplierID: \"\",\r\n    CategoryID: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        ProductName: updateItem.ProductName,\r\n        Unit: updateItem.Unit,\r\n        Price: updateItem.Price,\r\n        SupplierID: updateItem.SupplierID,\r\n        CategoryID: updateItem.CategoryID,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOnePor(updateID, postData)\r\n        : CRUD.createPor(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated products\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n     console.log(\"ProductName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"ProductName\">Product Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ProductName\"\r\n          value={postData.ProductName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Product Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Unit\">Unit</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Unit\"\r\n          value={postData.Unit}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Unit\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Price\">Price</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Price\"\r\n          value={postData.Price}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Price\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"SupplierID\">Supplier ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"SupplierID\"\r\n          value={postData.SupplierID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"SupplierID\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Unit\">Category ID</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"CategoryID\"\r\n          value={postData.CategoryID}\r\n          onChange={handleChangeData}\r\n          placeholder=\"CategoryID\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\shippers\\components\\formInput.js",["169"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    ShipperName: \"\",\r\n    Phone: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        ShipperName: updateItem.ShipperName,\r\n        Phone: updateItem.Phone,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOneSp(updateID, postData)\r\n        : CRUD.createSp(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated Shipper\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n    console.log(\"ShipperName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"ShipperName\">Shipper Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ShipperName\"\r\n          value={postData.ShipperName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Shipper Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"Phone\">Phone</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Phone\"\r\n          value={postData.Phone}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Phone\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\suppliers\\components\\formInput.js",["170"],"import React, { useEffect } from \"react\";\r\nimport CRUD from \"services/crud\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Button, Input, Label } from \"reactstrap\";\r\n\r\nfunction FormInput({ onSubmitSuccess, type, updateID, updateItem }) {\r\n  let history = useHistory();\r\n\r\n  // onSubmitSuccess => onUpdateSuccess\r\n  // Syntax js, defind {abc: \"text\", def: 12} => object (properties: abc, def)\r\n  const [postData, setPostData] = React.useState({\r\n    //Create postData state\r\n    SupplierName: \"\",\r\n    ContactName: \"\",\r\n    Address: \"\",\r\n    City: \"Da Nang\",\r\n    PostalCode: \"45000\",\r\n    Country: \"VN\",\r\n    Phone:\"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Update Item: \" + JSON.stringify(updateItem));\r\n    if (updateItem) {\r\n      setPostData({\r\n        SupplierName: updateItem.SupplierName,\r\n        ContactName: updateItem.ContactName,\r\n        Address: updateItem.Address,\r\n        City: updateItem.City,\r\n        PostalCode: updateItem.PostalCode,\r\n        Country: updateItem.Country,\r\n        Phone: updateItem.Phone,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function handleChangeData(e) {\r\n    setPostData({ ...postData, [e.target.name]: e.target.value }); //Only change customer name in postData\r\n  }\r\n\r\n  function handleOnClickSubmit(e) {\r\n    // Handle event when click submit button\r\n    console.log(\"POST DATA: \" + JSON.stringify(postData));\r\n    const crudType =\r\n      type === \"update\"\r\n        ? CRUD.updateOneSup(updateID, postData)\r\n        : CRUD.createSup(postData);\r\n\r\n    crudType\r\n      .then((res) => {\r\n        // set State check update success => true\r\n        if (type === \"create\") {\r\n          const check = res.data.message === \"Insert successfully\";\r\n\r\n          onSubmitSuccess(check); // re-render if check is true\r\n        } else if (type === \"update\") {\r\n          if (res.data.message === \"Updated suppliers\") history.goBack(); // Go back if update successfully\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err || \"Unknown Message\"); // alert error messages\r\n      });\r\n    console.log(\"SupplierName : \" + JSON.stringify(postData));\r\n  }\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault(); // prevent reload page if submit\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleOnSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"SupplierName\">Supplier Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"SupplierName\"\r\n          value={postData.SupplierName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Supplier Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"contactName\">Contact Name</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"ContactName\"\r\n          value={postData.ContactName}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Contact Name\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"_address\">Address</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"Address\"\r\n          value={postData.Address}\r\n          onChange={handleChangeData}\r\n          placeholder=\"Address\"\r\n          id=\"\"\r\n        />\r\n      </FormGroup>\r\n\r\n      <input type=\"text\" name=\"City\" value=\"this is city\" hidden />\r\n      <input type=\"text\" name=\"PostalCode\" value=\"this is postalCode\" hidden />\r\n      <input type=\"text\" name=\"Country\" value=\"this is country\" hidden />\r\n      <input type=\"text\" name=\"Phone\" value=\"this is Phone\" hidden />\r\n      <div className=\"text-center\">\r\n        <Button\r\n          name=\"btnSubmit\"\r\n          value=\"Submit\"\r\n          onClick={handleOnClickSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Submit{\" \"}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\nexport default FormInput;\r\n","D:\\CongNgheWeb\\CNW1\\CNW\\frontend\\src\\services\\http-common.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":33,"column":6,"nodeType":"177","endLine":33,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":129,"column":1,"nodeType":"181","endLine":138,"endColumn":6},{"ruleId":"175","severity":1,"message":"176","line":25,"column":6,"nodeType":"177","endLine":25,"endColumn":8,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"176","line":27,"column":6,"nodeType":"177","endLine":27,"endColumn":8,"suggestions":"183"},{"ruleId":"175","severity":1,"message":"176","line":31,"column":6,"nodeType":"177","endLine":31,"endColumn":8,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"176","line":29,"column":6,"nodeType":"177","endLine":29,"endColumn":8,"suggestions":"185"},{"ruleId":"175","severity":1,"message":"176","line":31,"column":6,"nodeType":"177","endLine":31,"endColumn":8,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"176","line":25,"column":6,"nodeType":"177","endLine":25,"endColumn":8,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"176","line":35,"column":6,"nodeType":"177","endLine":35,"endColumn":8,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateItem'. Either include it or remove the dependency array.","ArrayExpression",["191"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["192"],["193"],["194"],["195"],["196"],["197"],["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"199","fix":"201"},{"desc":"199","fix":"202"},{"desc":"199","fix":"203"},{"desc":"199","fix":"204"},{"desc":"199","fix":"205"},{"desc":"199","fix":"206"},{"desc":"199","fix":"207"},"Update the dependencies array to be: [updateItem]",{"range":"208","text":"209"},{"range":"210","text":"209"},{"range":"211","text":"209"},{"range":"212","text":"209"},{"range":"213","text":"209"},{"range":"214","text":"209"},{"range":"215","text":"209"},{"range":"216","text":"209"},[1041,1043],"[updateItem]",[803,805],[841,843],[947,949],[918,920],[959,961],[782,784],[1090,1092]]